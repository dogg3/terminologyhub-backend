name: Build and Deploy to Cloud Run

on:
  push:
    branches:
    - main  # Trigger on pushes to the main branch.

env:
  REGISTRY: europe-west2-docker.pkg.dev
  IMAGE_NAME: ${{ secrets.GCP_PROJECT_ID }}/docker-repository/pythonserver
  SERVICE_NAME: pythonserver
  WORKLOAD_IDENTITY_PROVIDER: 'projects/1000521913987/locations/global/workloadIdentityPools/my-app-dev-pool/providers/github-actions-provider'


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required for actions/checkout@v4
      id-token: write  # Required for Google Cloud authentication (via Workload Identity)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Checkout the repository content to GitHub Actions runner

    # Authenticate using Workload Identity Federation
    - name: Authenticate Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SA_EMAIL }}  # Service account email linked to the Workload Identity provider

    # Login to Google Artifact Registry (GAR)
    - name: Login to GAR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    # Set up Docker Buildx (supports multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Build and push Docker image to Artifact Registry
    - name: Build and push Docker image
      run: >
        docker buildx build --platform linux/amd64 -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --push .
        # Build and push Docker image with the commit SHA as a tag for version tracking.

    # Deploy the Docker image to Google Cloud Run
    - name: Deploy to Google Cloud Run
      run: |
        gcloud auth configure-docker ${{ env.REGISTRY }}  # Re-authenticate just in case
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region europe-west2 \
          --allow-unauthenticated \
          --min-instances 1
